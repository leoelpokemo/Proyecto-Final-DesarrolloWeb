HTML son muchos nodos
JS modifica esos nodos 

SELECCIONADORES
objeto => propiedades y eventos 

mutabilidad de componentes 

EN HTML 5
los template no tienen children, tienen fragmentos de código 
están para que les digas en qué nodo lo vas a montar 

//HTML NODOS    JS LINEAL

no hay nada del foreach de clonación
en un botón antes del foreach no puedes selccionar porque no existe
en el template tenemos solo uno y ocupamos varios
no poddemo seleccionar varios porque no existen
después de clonarlos ya se puede seleccionar 

si le añades un click, se le aplica unicamente al nodo que seleccionaste
realmente como se clonan los nodos, pues se vuelven independientes y el click
solo afecta a uno

JS es consciente de los nodos que creaste 

dialogue trae open y close, no te permite personalizar, solo se muestra o no 

el queryselector solo selecciona un elemento en el dom, solo guarda la ubiación de un nodo 

queryselectorall  y se puede selccionar una clase que se repite, eso ahorra código y también tiempo
esto genera un arreglo de, en este caso, modales y se puede iterar, se le puede poner un foreach

------------------------------------------------------------------------------------------------------------------------------------------------------------

console.log("hola munde")

const cards = [{
     image: "https://images.pexels.com/photos/32599518/pexels-photo-32599518.jpeg",
     name: "Cancún",
     },
     {
     image: "https://images.pexels.com/photos/31386383/pexels-photo-31386383.jpeg",
     name: "Cancún",
     },
     {
          image:"https://images.pexels.com/photos/32733417/pexels-photo-32733417.jpeg",
          name: "Tlaxcala",
     }];
//Esto aparece después de que carga head y body si se pone al principio no tendrás disponibilidad para nada el head y el body 
// aunque hay unos que si se ponen al principio. Js manipula el codigo que esta cargado no el pre-cargado

//const travelerProfileName = document.querySelector(".traveler-profile__name");
const travelerProfileDetails = document.querySelector(".traveler-profile__details");

const travelerProfileName = travelerProfileDetails.querySelector(".traveler-profile__name");
const travelerProfileAddBtn = document.querySelector (".traveler-profile__edit-btn");
const ModalNewPlace=document.querySelector("#modal-new-place");
const modalClose = Array.from(document.querySelectorAll(".modal__close"));
console.log("ARRAY AAa", modalClose);
//aquí ya no tengo que buscar desde la raíz del documento si no desde el div en el que se encuentra 
// la clase que acabamos de poner, ya sabemos que está en el div así que es más facil 
// citar que está en el div que en todo el documento, nos ahorra mucho tiempo 
//pero si queremos el h1 de este div pues ni modo que pongamos de que solo la clase del h1 porque 
//todos los h1 tiene la misma clase, se va a confundir la wea, así que pones el div para que no se equivoque 

//aquí se copia la ruta del nodo
const placesGalleryList =document.querySelector(".places-gallery__list");
const travelerProfileEditBtn = document.querySelector(".traveler-profile__edit-btn");
const modalProfile = document.querySelector("#modal-new-place");
const travelerProfileAddPlaceButton = document.querySelector(".traveler-ptofile__add-place-btn")


modalClose.forEach((modalClose) => {
     modalClose.addEventListener("click", ()=>{
          console.log("estoy dentro");
          ModalNewPlace.classList.toggle("modal_is-opened");
     })
});
 cards.forEach((card) => {
     const templatePlaceCard = document.querySelector("#template-place-card").content.cloneNode(true);

     const placeCardImage = templatePlaceCard.querySelector(".place-card__image");
     const  placeCardDescription = templatePlaceCard.querySelector(".place-card__title");
     const placeCardDeleteButn = templatePlaceCard.querySelector(".place-card__delete-button");

     placeCardDeleteButn.addEventListener("click", (evt) => {
          console.log (evt);
          evt.target.closest(".place-card").remove();
     });
placeCardImage.src = card.image;
placeCardImage.alt = card.name;
placeCardDescription.textContent = card.name;

     placesGalleryList.appendChild(templatePlaceCard);
//le añadimos un hijo lol
 });

travelerProfileAddPlaceButton.addEventListener("click", () => {
  ModalNewPlace.classList.toggle("modal_is-opened");
});

travelerProfileEditBtn.addEventListener("click", ()=> {
     console.log("Click en en el lapicito");
     let modal = evt.target.closest(".modal")  //es más rápido porque lo voy a usar solo un pocas veces, a diferencia de let
     //modalProfile.classList.toggle("moda-is.opened");
});

const add = (card) =>{
     addCard(card);
};

//Aquí practicamente 'atrapamos' el codigo html pero no como html sino como un objeto JS. Aquíe creamos un objeto h1 con propiedades
//conts travelerProfile = document.querySelector(#idTemporal);
// const travelerProfile = document.getlementById ()
console.dir(travelerProfileName)
//Aquí vemos la lista de propiedades que tiene (tambien muestra los estados mutados a menos que se le ponga un stop)
travelerProfileName.textContent = "Valeria Naranja"
//Aquí se cambia el name donde la propiedad sea texcontent pero si tiene el name original de hecho a esto se le llama mutabilidad